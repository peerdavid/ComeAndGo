# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                          @controllers.TimeTrackController.index

# Login
GET     /login                                     @controllers.AuthenticationController.loginForm
POST    /login                                     @org.pac4j.play.CallbackController.callback
GET     /logout                                    @org.pac4j.play.ApplicationLogoutController.logout
POST    /logout                                    @org.pac4j.play.ApplicationLogoutController.logout
POST    /signup                                    @controllers.AuthenticationController.doCreateUser

# Users
GET     /users                                     @controllers.UserManagementController.readUsers
POST    /users                                     @controllers.UserManagementController.updateUser
GET     /users/delete                              @controllers.UserManagementController.deleteUser(userName)

# Timetracks
GET     /timetracks/:userId                        @controllers.TimeTrackController.readTimeTracks(userId : Int, from ?= null, to ?= null)
POST    /timetracks/:userId                        @controllers.TimeTrackController.updateTimeTrack(userId : Int, from ?= null, to ?= null)
POST    /timetracks/:userId/create                 @controllers.TimeTrackController.createTimeTrack(userId : Int, from ?= null, to ?= null)
GET     /timetracks/:userId/delete                 @controllers.TimeTrackController.deleteTimeTrack(timetrackId : Int, userId : Int, from ?= null, to ?= null)
POST    /timetracks/:userId/breaks/create          @controllers.TimeTrackController.createBreak(timetrackId: Int, userId : Int, from ?= null, to ?= null)
GET     /timetracks/:userId/breaks/delete          @controllers.TimeTrackController.deleteBreak(breakid: Int, timetrackId: Int, userId : Int, from ?= null, to ?= null)

# Timeoffs
GET     /timeoff                                   @controllers.TimeOffController.index
POST    /timeoff/createTimeOff                     @controllers.TimeOffController.createTimeOff
GET     /timeoff/calendar                          @controllers.TimeOffController.readTimeOffCalendar
GET     /timeoff/details/:id                       @controllers.TimeOffController.readTimeOffDetails(id: Int)
GET     /timeoff/delete/:id                        @controllers.TimeOffController.deleteTimeOff(id: Int)

# Reporting
GET     /reporting/company                         @controllers.ReportingController.companyReport
GET     /reporting/boss                            @controllers.ReportingController.bossReport
GET     /reporting/employee                        @controllers.ReportingController.employeeReport

# Notifications
GET     /notification                              @controllers.NotificationController.index
GET     /notification/accept                       @controllers.NotificationController.acceptNotification(notifId : Int)
GET     /notification/reject                       @controllers.NotificationController.rejectNotification(notifId : Int)
GET     /notification/number                       @controllers.NotificationController.readNumberNewNotifications()

# Come & Go
GET     /come                                      @controllers.TimeTrackController.come
GET     /go                                        @controllers.TimeTrackController.go
GET     /pause                                     @controllers.TimeTrackController.pause
GET     /progress                                  @controllers.TimeTrackController.readProgress

# Map static resources _from the /public folder _to the /assets URL path
GET     /assets/*file                              controllers.Assets.at(path="/public", file)

